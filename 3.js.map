{"version":3,"sources":["webpack://reactApp/./src/app2/UpdUser.js","webpack://reactApp/./src/app2/root.js","webpack://reactApp/./src/app2/main.app.js"],"names":["User","props","handleChange","e","console","log","updateUser","target","value","type","name","onChange","country","Home","useState","user","setUser","Button","data","useEffect","unsubscribe","subscribeParent","newUser","parentState","id","onClick","lable","reactLifecycles","singleSpaReact","React","ReactDOM","rootComponent","domElementGetter","document","getElementById","bootstrap","mount","unmount"],"mappings":"qKAceA,G,MAbF,SAAAC,GACZ,IAAMC,EAAe,SAACC,GACrBC,QAAQC,IAAIF,GACoB,mBAArBF,EAAMK,YAA2BL,EAAMK,WAAWH,EAAEI,OAAOC,QAEvE,OACC,oCACC,uCAAmB,2BAAOC,KAAK,OAAOD,MAAOP,EAAMS,MAAQ,GAAIC,SAAUT,IACzE,0CAAsB,2BAAOO,KAAK,OAAOD,MAAOP,EAAMW,SAAW,GAAID,SAAUT,O,qsBCLlF,IAoCeW,EApCF,SAAAZ,GAAS,QACAa,mBAAS,IADT,GAChBC,EADgB,KACXC,EADW,KAEjBC,EAAShB,EAAMiB,MAAQjB,EAAMiB,KAAKD,OAqBtC,OApBAE,qBAAU,WACTf,QAAQC,IAAI,uBACZ,IACIe,EAAcnB,EAAMiB,MAAQjB,EAAMiB,KAAKG,iBAAgB,WAC1D,IAAIC,EAAUrB,EAAMiB,KAAKK,cACtBD,EAAQZ,MACVM,EAAQM,MAGV,OAAO,WACNF,OAEA,CAAEnB,EAAMiB,MAAQjB,EAAMiB,KAAKG,kBAC7BF,qBAAU,WACT,GAAGlB,EAAMiB,MAAyC,mBAA1BjB,EAAMiB,KAAKK,YAA0B,CAC5D,IAAID,EAAUrB,EAAMiB,KAAKK,cACzBP,EAAQM,MAER,IAGD,oCACC,+DACA,qCAAWP,EAAKL,MAChB,yBAAKc,GAAK,QACTP,GAAU,kBAACA,EAAD,CAAQQ,QAAW,kBAAIxB,EAAMiB,KAAKZ,WAAW,YAAYoB,MAAQ,eAC5E,6BACA,kBAAC,EAAD,KAAUX,EAAV,CAAgBT,WAAcL,EAAMiB,MAAQjB,EAAMiB,KAAKZ,gBClC1D,wHASA,IAAMqB,EAAkBC,IAAe,CACrCC,UACAC,aACAC,cAAelB,EACfmB,iBARF,WACE,OAAOC,SAASC,eAAe,UAUpBC,EAAY,CACvBR,EAAgBQ,WAGLC,EAAQ,CACnBT,EAAgBS,OAGLC,EAAU,CACrBV,EAAgBU","file":"3.js","sourcesContent":["import React from 'react';\r\nconst User = props => {\r\n\tconst handleChange = (e) => {\r\n\t\tconsole.log(e)\r\n\t\tif (typeof props.updateUser === 'function') props.updateUser(e.target.value);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label>Name</label><input type='text' value={props.name || \"\"} onChange={handleChange} />\r\n\t\t\t<label>Country</label><input type='text' value={props.country || \"\"} onChange={handleChange} />\r\n\t\t</>\r\n\r\n\t)\r\n}\r\nexport default User;","import React,{useEffect,useState} from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport User from './UpdUser';\r\n\r\nconst Home = props => {\r\n\tlet [user,setUser] = useState({});\r\n\tlet Button = props.data && props.data.Button;\r\n\tuseEffect(()=>{\r\n\t\tconsole.log(\"Inside Effect hook:\")\t\t\r\n\t\tlet updUser =()=>props.data && props.data.updateUser && props.data.updateUser('ReactCmp');\r\n\t\tlet unsubscribe = props.data && props.data.subscribeParent(()=>{\r\n\t\t\tlet newUser = props.data.parentState();\r\n\t\t\tif(newUser.name){\r\n\t\t\t\tsetUser(newUser);\r\n\t\t\t}\r\n\t\t});\t\t\t\t\r\n\t\treturn ()=>{\r\n\t\t\tunsubscribe();\t\t\r\n\t\t};\r\n\t},[(props.data && props.data.subscribeParent)]);\r\n\tuseEffect(()=>{\r\n\t\tif(props.data && typeof props.data.parentState == \"function\"){\r\n\t\t\tlet newUser = props.data.parentState();\r\n\t\t\tsetUser(newUser);\r\n\t\t}\r\n\t},[])\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>Sample out put from second app</div>\r\n\t\t\t<div>Name:{user.name}</div>\r\n\t\t\t<div id = 'btn'></div>\r\n\t\t\t{Button && <Button onClick = {()=>props.data.updateUser('NewUser')} lable = 'UpdateUser' />}\r\n\t\t\t<br/>\r\n\t\t\t<User {...user} updateUser = {props.data && props.data.updateUser} />\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport singleSpaReact from 'single-spa-react';\r\nimport Home from './root.js';\r\n\r\nfunction domElementGetter() {\r\n  return document.getElementById(\"vue\")\r\n}\r\n\r\nconst reactLifecycles = singleSpaReact({\r\n  React,\r\n  ReactDOM,\r\n  rootComponent: Home,\r\n  domElementGetter,\r\n})\r\n\r\nexport const bootstrap = [\r\n  reactLifecycles.bootstrap,\r\n];\r\n\r\nexport const mount = [\r\n  reactLifecycles.mount,\r\n];\r\n\r\nexport const unmount = [\r\n  reactLifecycles.unmount,\r\n];"],"sourceRoot":""}